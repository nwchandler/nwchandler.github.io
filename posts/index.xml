<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nick Chandler</title>
    <link>https://nickchandler.dev/posts/</link>
    <description>Recent content in Posts on Nick Chandler</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 12 Jan 2025 16:30:45 -0500</lastBuildDate>
    <atom:link href="https://nickchandler.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>xv6 Chapter 1: Operating System Interfaces</title>
      <link>https://nickchandler.dev/articles/2025/01/12/xv6-chapter-1-operating-system-interfaces/</link>
      <pubDate>Sun, 12 Jan 2025 16:30:45 -0500</pubDate>
      <guid>https://nickchandler.dev/articles/2025/01/12/xv6-chapter-1-operating-system-interfaces/</guid>
      <description>I&amp;rsquo;ve recently started an effort to learn more about operating systems, particularly Unix-like systems. Modern operating systems offer a lot of incredible capabilities for application programmers, and they can even provide unique ways of delivering applications. For example, containers are largely possible because of Linux capabilities such as namespaces and cgroups. However, I would like to spend some time digging into the foundations of operating systems so that I have a better framework with which to explore some of these unique, modern capabilities.</description>
    </item>
    <item>
      <title>Faster Software Development with the Mikado Method</title>
      <link>https://nickchandler.dev/articles/2024/09/21/faster-software-development-with-the-mikado-method/</link>
      <pubDate>Sat, 21 Sep 2024 00:37:00 -0400</pubDate>
      <guid>https://nickchandler.dev/articles/2024/09/21/faster-software-development-with-the-mikado-method/</guid>
      <description>As a software engineer, have you ever faced a complex project where every task seems to depend on another? My team at HashiCorp ran into just that — and found a method that helped us tackle those interdependencies in a way that lets us make smooth progress. Here’s how the Mikado Method improved our workflow.&#xA;The Challenge Link to heading About a year ago, my team at HashiCorp tried something new.</description>
    </item>
    <item>
      <title>wishr Repo Setup</title>
      <link>https://nickchandler.dev/articles/2023/11/29/wishr-repo-setup/</link>
      <pubDate>Wed, 29 Nov 2023 09:09:15 -0500</pubDate>
      <guid>https://nickchandler.dev/articles/2023/11/29/wishr-repo-setup/</guid>
      <description>In the previous post, I described why I&amp;rsquo;m writing a small Unix shell, which I&amp;rsquo;m calling wishr, along with a bit of an overview of how I plan to approach the project. I&amp;rsquo;m excited to get started on the shell, itself, but it&amp;rsquo;s important to get a new repo set up for success. So, in this post, I&amp;rsquo;ll go through the initial repository setup I&amp;rsquo;ve gone with.&#xA;If you&amp;rsquo;d like to look at the specific git commit, here it is!</description>
    </item>
    <item>
      <title>wishr - A Small Shell Written in Rust</title>
      <link>https://nickchandler.dev/articles/2023/11/25/wishr-a-small-shell-written-in-rust/</link>
      <pubDate>Sat, 25 Nov 2023 22:01:00 -0500</pubDate>
      <guid>https://nickchandler.dev/articles/2023/11/25/wishr-a-small-shell-written-in-rust/</guid>
      <description>This is the first post in a series where I plan to document my experience writing a small Unix shell in Rust called wishr. In this post, I&amp;rsquo;ll describe why I&amp;rsquo;m starting this project and how I plan to proceed through it.&#xA;Why write a shell? Link to heading First off, to be clear, I have no intention to make a production quality shell: Bash, Z Shell, fish, and the like, can all breathe a sigh of relief here!</description>
    </item>
  </channel>
</rss>
