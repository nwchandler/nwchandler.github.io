<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mikado Method on Nick Chandler</title>
    <link>https://nickchandler.dev/tags/mikado-method/</link>
    <description>Recent content in Mikado Method on Nick Chandler</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 21 Sep 2024 23:30:34 -0400</lastBuildDate>
    <atom:link href="https://nickchandler.dev/tags/mikado-method/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Faster Software Development with the Mikado Method</title>
      <link>https://nickchandler.dev/articles/2024/09/21/faster-software-development-with-the-mikado-method/</link>
      <pubDate>Sat, 21 Sep 2024 00:37:00 -0400</pubDate>
      <guid>https://nickchandler.dev/articles/2024/09/21/faster-software-development-with-the-mikado-method/</guid>
      <description>&lt;p&gt;As a software engineer, have you ever faced a complex project where every task seems to depend on another? My team at HashiCorp ran into just that — and found a method that helped us tackle those interdependencies in a way that lets us make smooth progress. Here’s how the &lt;strong&gt;Mikado Method&lt;/strong&gt; improved our workflow.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-challenge&#34;&gt;&#xA;  The Challenge&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#the-challenge&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;About a year ago, my team at HashiCorp tried something new. Our small team was beginning development on a new capability that would require changes to several libraries and a web service, with lots of interdependencies between them. To complicate matters, other teams were waiting on parts of our work to start theirs. We wanted a way that we could all make progress in parallel without the risk of constantly getting blocked by unfinished dependencies.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
